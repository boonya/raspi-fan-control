name: Build

on: push

env:
  PACKAGE_ROOT: pkg-src
  PACKAGE: raspi-fan-control
  DESC: "RaspberryPI Cooling Fan Control Service."
  MAINTAINER: "Serhii [boonya] Buinytskyi <me@boonya.info>"
  ARCH: arm64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Debug
        run: |
          # echo "github.event_name -> ${{github.event_name}}"
          # echo "github.base_ref -> ${{github.base_ref}}"
          # echo "github.head_ref -> ${{github.head_ref}}"
          # echo "github.ref -> ${{github.ref}}"
          # github.ref -> refs/heads/build-depkg
          # github.ref -> refs/tags/v0.0.0
          echo "::debug::github.ref -> ${{github.ref}}"

      - name: Retrieve latest package version
        # if: startsWith(github.ref, 'refs/tags/') != true
        run: |
          TYPE=$(echo ${{github.ref}} | cut -d'/' -f 2)
          LABEL=$(echo ${{github.ref}} | cut -d'/' -f 3)

          if [[ "$TYPE" == "tags" ]]; then
            echo "LATEST_PKG_VERSION=$LABEL" >> $GITHUB_ENV
            # echo "::set-output name=latest_pkg_version::$LABEL"
          else
            git fetch --tags
            LATEST_PKG_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))-$LABEL
            echo "LATEST_PKG_VERSION=$LATEST_PKG_VERSION" >> $GITHUB_ENV
            # echo "::set-output name=latest_pkg_version::$LATEST_PKG_VERSION"
          fi;

      - name: Create package source
        run: |
          mkdir -p ${{env.PACKAGE_ROOT}}/usr/bin
          cp main.py ${{env.PACKAGE_ROOT}}/usr/bin/raspi-fan-control
          mkdir -p ${{env.PACKAGE_ROOT}}/etc/systemd/system/
          cp raspi-fan-control.service ${{env.PACKAGE_ROOT}}/etc/systemd/system/raspi-fan-control.service
          PYTHON_PACKAGES=$(cat requirements.txt | xargs)
          sed -i "s/{{python-packages}}/$PYTHON_PACKAGES/" ${{env.PACKAGE_ROOT}}/DEBIAN/postinst
          sed -i "s/{{python-packages}}/$PYTHON_PACKAGES/" ${{env.PACKAGE_ROOT}}/DEBIAN/postrm
      - name: Build package
        id: build
        uses: jiro4989/build-deb-action@v2
        with:
          package: ${{env.PACKAGE}}
          desc: ${{env.DESC}}
          maintainer: ${{env.MAINTAINER}}
          package_root: ${{env.PACKAGE_ROOT}}
          arch: 'arm64'
          # version: ${{steps.vars.outputs.latest_pkg_version}}
          version: ${{env.LATEST_PKG_VERSION}}
      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          path: "*.deb"
