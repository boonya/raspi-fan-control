name: Build Debian package

on: [pull_request]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create package source
        run: |
          mkdir -p pkg-src/usr/bin
          cp main.py pkg-src/usr/bin/raspi-fan-control
          mkdir -p pkg-src/etc/systemd/system/
          cp raspi-fan-control.service pkg-src/etc/systemd/system/raspi-fan-control.service
          PYTHON_PACKAGES=$(cat requirements.txt | xargs)
          sed -i "s/{{python-packages}}/$PYTHON_PACKAGES/" pkg-src/DEBIAN/postinst
          sed -i "s/{{python-packages}}/$PYTHON_PACKAGES/" pkg-src/DEBIAN/postrm
          LATEST_PKG_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "LATEST_PKG_VERSION=$LATEST_PKG_VERSION" >> $GITHUB_ENV
      - name: Build package
        id: build
        uses: jiro4989/build-deb-action@v2
        with:
          package: raspi-fan-control
          desc: 'RaspberryPI Cooling Fan Control Service.'
          maintainer: Serhii [boonya] Buinytskyi <me@boonya.info>
          package_root: pkg-src
          arch: 'arm64'
          version: ${{env.LATEST_PKG_VERSION}}
      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          path: "*.deb"
      # - name: Create Pre-Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: true
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./artifact.zip
      #     asset_name: artifact.zip
      #     asset_content_type: application/zip